{"version":3,"file":"data-generator.js","sources":["../src/index.js"],"sourcesContent":["\nfunction generateMinMaxData(min, max) {\n  return Array.from({ length: max - min + 1 }, (_, i) => i+min)\n}\n\nfunction randomFromArray(arr) {\n  let randomIndex = Math.random() * arr.length | 0;\n  return arr[randomIndex];\n}\n\nexport default function generateData(config = {}) {\n  const { amount = 1, names = ['A'], minMaxData = [{min: 1, max: 2, name: \"B\"}] } = config;\n  let randomDataAmount = amount - (minMaxData.length*2);\n  if(randomDataAmount < 1) { randomDataAmount = 1 };\n  let result = [];\n  let singleResultNames = {};\n  minMaxData.forEach((data) => {\n    let name = randomFromArray(names)\n    const min  = randomFromArray(generateMinMaxData(data.min, data.min))\n    result.push({month: data.name, name, d: min})\n    singleResultNames[data.name] = [name]\n    if(names.length > 1) {\n      let minName = name;\n      while(name === minName) {\n        name = randomFromArray(names)\n      }\n    }\n    const max = randomFromArray(generateMinMaxData(data.max, data.max))\n    result.push({month: data.name, name, d: max})\n    singleResultNames[data.name].push(name)\n  })\n  for(let i=0;i<randomDataAmount;i++) {\n    for (const [i, name] of Object.entries(names)) {\n      minMaxData.forEach((data) => {\n        // for each month we need to check if the islands name already has a value and then generate\n        if(randomDataAmount === 1 && singleResultNames[data.name].includes(name)) { } else {\n          const min = data.min + 1;\n          const max = data.max - 1;\n          const d = randomFromArray(generateMinMaxData(min, max))\n          result.push({month: data.name, name, d})\n        }\n      })\n    }\n  }\n  return result;\n}\n"],"names":["generateMinMaxData","min","max","Array","from","length","_","i","randomFromArray","arr","Math","random","config","amount","names","minMaxData","name","randomDataAmount","result","singleResultNames","forEach","data","push","month","d","minName","Object","entries","includes"],"mappings":"wOACA,SAASA,EAAmBC,EAAKC,GAC/B,OAAOC,MAAMC,KAAK,CAAEC,OAAQH,EAAMD,EAAM,IAAK,CAACK,EAAGC,IAAMA,EAAEN,IAG3D,SAASO,EAAgBC,GAEvB,OAAOA,EADWC,KAAKC,SAAWF,EAAIJ,OAAS,UAIlC,SAAsBO,EAAS,IAC5C,MAAMC,OAAEA,EAAS,EAACC,MAAEA,EAAQ,CAAC,KAAIC,WAAEA,EAAa,CAAC,CAACd,IAAK,EAAGC,IAAK,EAAGc,KAAM,OAAUJ,EAClF,IAAIK,EAAmBJ,EAA4B,EAAlBE,EAAWV,OACzCY,EAAmB,IAAKA,EAAmB,GAC9C,IAAIC,EAAS,GACTC,EAAoB,GACxBJ,EAAWK,SAASC,IAClB,IAAIL,EAAOR,EAAgBM,GAC3B,MAAMb,EAAOO,EAAgBR,EAAmBqB,EAAKpB,IAAKoB,EAAKpB,MAG/D,GAFAiB,EAAOI,KAAK,CAACC,MAAOF,EAAKL,KAAMA,KAAAA,EAAMQ,EAAGvB,IACxCkB,EAAkBE,EAAKL,MAAQ,CAACA,GAC7BF,EAAMT,OAAS,EAAG,CACnB,IAAIoB,EAAUT,EACd,KAAMA,IAASS,GACbT,EAAOR,EAAgBM,GAG3B,MAAMZ,EAAMM,EAAgBR,EAAmBqB,EAAKnB,IAAKmB,EAAKnB,MAC9DgB,EAAOI,KAAK,CAACC,MAAOF,EAAKL,KAAMA,KAAAA,EAAMQ,EAAGtB,IACxCiB,EAAkBE,EAAKL,MAAMM,KAAKN,MAEpC,IAAI,IAAIT,EAAE,EAAEA,EAAEU,EAAiBV,IAC7B,IAAK,MAAOA,EAAGS,KAASU,OAAOC,QAAQb,GACrCC,EAAWK,SAASC,IAElB,GAAwB,IAArBJ,GAA0BE,EAAkBE,EAAKL,MAAMY,SAASZ,QAAgB,CACjF,MAEMQ,EAAIhB,EAAgBR,EAFdqB,EAAKpB,IAAM,EACXoB,EAAKnB,IAAM,IAEvBgB,EAAOI,KAAK,CAACC,MAAOF,EAAKL,KAAMA,KAAAA,EAAMQ,EAAAA,QAK7C,OAAON"}